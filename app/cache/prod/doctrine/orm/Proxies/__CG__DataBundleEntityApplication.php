<?php

namespace Proxies\__CG__\DataBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Application extends \DataBundle\Entity\Application implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'id', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'name', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'appkey', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'url', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'incidents', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'colorHex', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'sendEmail', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'emailRecipients', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'heartbeats', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'sendSlack', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'slackUrl'];
        }

        return ['__isInitialized__', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'id', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'name', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'appkey', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'url', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'incidents', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'colorHex', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'sendEmail', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'emailRecipients', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'heartbeats', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'sendSlack', '' . "\0" . 'DataBundle\\Entity\\Application' . "\0" . 'slackUrl'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Application $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setAppkey($appkey)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAppkey', [$appkey]);

        return parent::setAppkey($appkey);
    }

    /**
     * {@inheritDoc}
     */
    public function getAppkey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAppkey', []);

        return parent::getAppkey();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', [$url]);

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', []);

        return parent::getUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setColorHex($colorHex)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setColorHex', [$colorHex]);

        return parent::setColorHex($colorHex);
    }

    /**
     * {@inheritDoc}
     */
    public function getColorHex()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getColorHex', []);

        return parent::getColorHex();
    }

    /**
     * {@inheritDoc}
     */
    public function setSendEmail($sendEmail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSendEmail', [$sendEmail]);

        return parent::setSendEmail($sendEmail);
    }

    /**
     * {@inheritDoc}
     */
    public function getSendEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSendEmail', []);

        return parent::getSendEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailRecipients($emailRecipients)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailRecipients', [$emailRecipients]);

        return parent::setEmailRecipients($emailRecipients);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailRecipients()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailRecipients', []);

        return parent::getEmailRecipients();
    }

    /**
     * {@inheritDoc}
     */
    public function setSendSlack($sendSlack)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSendSlack', [$sendSlack]);

        return parent::setSendSlack($sendSlack);
    }

    /**
     * {@inheritDoc}
     */
    public function getSendSlack()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSendSlack', []);

        return parent::getSendSlack();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlackUrl($slackUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlackUrl', [$slackUrl]);

        return parent::setSlackUrl($slackUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlackUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlackUrl', []);

        return parent::getSlackUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function addIncident(\DataBundle\Entity\Incident $incident)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addIncident', [$incident]);

        return parent::addIncident($incident);
    }

    /**
     * {@inheritDoc}
     */
    public function removeIncident(\DataBundle\Entity\Incident $incident)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeIncident', [$incident]);

        return parent::removeIncident($incident);
    }

    /**
     * {@inheritDoc}
     */
    public function getIncidents()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIncidents', []);

        return parent::getIncidents();
    }

    /**
     * {@inheritDoc}
     */
    public function addHeartbeat(\DataBundle\Entity\Heartbeat $heartbeat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addHeartbeat', [$heartbeat]);

        return parent::addHeartbeat($heartbeat);
    }

    /**
     * {@inheritDoc}
     */
    public function removeHeartbeat(\DataBundle\Entity\Heartbeat $heartbeat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeHeartbeat', [$heartbeat]);

        return parent::removeHeartbeat($heartbeat);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeartbeats()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeartbeats', []);

        return parent::getHeartbeats();
    }

}
